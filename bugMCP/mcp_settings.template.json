{
  "protocol_version": "2025-03-26",
  "model_name": "BugTracker",
  "model_version": "1.0.0",
  "description": "A bug tracking system for the GraphRAG project",
  "authentication": {
    "type": "none"
  },
  "transport_protocol": "http",
  "serialization_format": "json",
  "server_details": {
    "host": "localhost", 
    "port": "${GRAPHRAG_PORT_BUG_MCP}",
    "base_path": "/mcp"
  },
  "tools": [
    {
      "name": "add_bug",
      "description": "Add a new bug to the system",
      "inputSchema": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A description of the bug"
          },
          "cause": {
            "type": "string",
            "description": "The perceived cause of the bug"
          }
        },
        "required": ["description", "cause"]
      },
      "annotations": {
        "title": "Add Bug",
        "readOnlyHint": false,
        "destructiveHint": false,
        "idempotentHint": false,
        "openWorldHint": false
      }
    },
    {
      "name": "update_bug",
      "description": "Update an existing bug",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the bug to update"
          },
          "status": {
            "type": "string",
            "description": "The new status of the bug",
            "enum": ["open", "fixed"]
          },
          "resolution": {
            "type": "string",
            "description": "The resolution details for the bug"
          }
        },
        "required": ["id"]
      },
      "annotations": {
        "title": "Update Bug",
        "readOnlyHint": false,
        "destructiveHint": false,
        "idempotentHint": true,
        "openWorldHint": false
      }
    },
    {
      "name": "delete_bug",
      "description": "Delete a bug from the system",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the bug to delete"
          }
        },
        "required": ["id"]
      },
      "annotations": {
        "title": "Delete Bug",
        "readOnlyHint": false,
        "destructiveHint": true,
        "idempotentHint": true,
        "openWorldHint": false
      }
    },
    {
      "name": "get_bug",
      "description": "Get a specific bug by ID",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the bug to retrieve"
          }
        },
        "required": ["id"]
      },
      "annotations": {
        "title": "Get Bug",
        "readOnlyHint": true,
        "openWorldHint": false
      }
    },
    {
      "name": "list_bugs",
      "description": "List all bugs in the system",
      "inputSchema": {
        "type": "object",
        "properties": {}
      },
      "annotations": {
        "title": "List Bugs",
        "readOnlyHint": true,
        "openWorldHint": false
      }
    }
  ],
  "components": {
    "schemas": {
      "Bug": {
        "type": "object",
        "description": "Represents a bug in the system.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier for the bug."
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the bug."
          },
          "cause": {
            "type": "string",
            "description": "The perceived cause of the bug."
          },
          "status": {
            "type": "string",
            "description": "The current status of the bug (e.g., open, fixed).",
            "enum": ["open", "fixed"]
          },
          "resolution": {
            "type": "string",
            "description": "Details on how the bug was resolved."
          }
        },
        "required": ["id", "description", "cause", "status"]
      }
    }
  }
}